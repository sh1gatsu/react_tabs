{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","content","onTabSelected","className","map","tab","classNames","id","href","onClick","title","App","useState","setSelectedTab","currenttab","find","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QACAC,EACI,EADJA,cAEA,OAEE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,GACA,CACE,YAAaN,IAAgBK,EAAIE,KAGrC,UAAQ,MAPV,SAUE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,WACHT,IAAgBK,EAAIE,IACtBL,EAAcG,EAAIE,KALxB,SASGF,EAAIK,SAXFL,EAAIE,WAkBjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QC5CIF,EAAO,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAAST,QAAS,eACxC,CAAEM,GAAI,QAASG,MAAO,QAAST,QAAS,eACxC,CAAEM,GAAI,QAASG,MAAO,QAAST,QAAS,gBAG7BU,EAAgB,WAC3B,MAAsCC,mBAAS,SAA/C,mBAAOZ,EAAP,KAAoBa,EAApB,KAEMC,EAAaf,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIE,KAAOP,MAAgBD,EAAK,GAE5DW,EAAmBI,EAAnBJ,MAAOT,EAAYa,EAAZb,QAMf,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBO,KAGtB,cAAC,EAAD,CACEX,KAAMA,EACNC,YAAaA,EACbE,cAbgB,SAACK,GACrBM,EAAeN,IAaXN,QAASA,QC9BjBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0ac7aa3.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: string,\n  onTabSelected: (id: string) => void,\n  content: string;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTab,\n  content,\n  onTabSelected,\n}) => {\n  return (\n\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                '',\n                {\n                  'is-active': selectedTab === tab.id,\n                },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTab !== tab.id) {\n                    onTabSelected(tab.id);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState('tab-1');\n\n  const currenttab = tabs.find(tab => tab.id === selectedTab) || tabs[0];\n\n  const { title, content } = currenttab;\n\n  const onTabSelected = (id: string) => {\n    setSelectedTab(id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        onTabSelected={onTabSelected}\n        content={content}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}